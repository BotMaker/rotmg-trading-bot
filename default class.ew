include input_stream.ew

sequence class_list,class_freelist
class_list={}
class_freelist={}
constant name_arg1 = 1


global function name_new()
  integer handle
  if length(class_freelist)>0 then
    handle= class_freelist[1]
    class_freelist = class_freelist[2..length(class_freelist)]
  else
    class_list= append(class_list,{0})
    handle=length(class_list)
  end if

  return handle
end function

global function name_new_from_input(integer inputstream)
  integer handle
  if length(class_freelist)>0 then
    handle= class_freelist[1]
    class_freelist = class_freelist[2..length(class_freelist)]
  else
    class_list= append(class_list,{0,0,0})
    handle=length(class_list)
  end if

  return handle
end function

global procedure name_delete(integer handle)
  class_list[handle]={}
  class_freelist =append(class_freelist, handle)
end procedure
